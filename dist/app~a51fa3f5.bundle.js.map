{"version":3,"file":"app~a51fa3f5.bundle.js","mappings":";yYACA,8hGAAAA,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,0oDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,kkBAEAC,QAAQC,IAAI,uBACZ,IAAQC,EAAuDC,EAAAA,EAAAA,cAAxCC,EAAwCD,EAAAA,EAAAA,iBAAtBE,EAAsBF,EAAAA,EAAAA,kBAEzDG,GAAYC,EAAAA,EAAAA,IAAOL,EAAeE,EAAkB,CACxDI,QADwD,SAChDC,GACNA,EAASC,kBAAkBL,EAAmB,CAAEM,QAAS,MAC1D,IAwBH,QArB2B,CACnBC,cADmB,SACLC,GAAI,oGACjBA,EADiB,iEAIRP,EAJQ,uCAIGQ,IAAIT,EAAmBQ,IAJ1B,4CAKvB,EACKE,iBAPmB,WAOA,iHACTT,EADS,uCACEU,OAAOX,IADT,4CAExB,EACKY,cAVmB,SAULC,GAAY,oGACzBA,EAAWC,eAAe,MADD,iEAIhBb,EAJgB,uCAILc,IAAIf,EAAmBa,IAJlB,4CAK/B,EACKG,iBAhBmB,SAgBFR,GAAI,iHACXP,EADW,8CACOD,EAAmBQ,IAD1B,4CAE1B,+CCvBH,QALqB,CACnBS,KAAM,GAAF,OAAKnB,EAAAA,EAAAA,SAAL,QACJoB,OAAQ,SAACV,GAAD,gBAAWV,EAAAA,EAAAA,SAAX,kBAAoCU,EAApC,sPCHV,4wNAkBA,QAjBMW,wMACJ,sGACyBC,MAAMC,EAAAA,MAD/B,cACQC,EADR,OAEE3B,QAAQC,IAAI0B,GAFd,SAG6BA,EAASC,OAHtC,cAGQC,EAHR,yBAISA,EAAaC,aAJtB,qIAOA,WAA8BjB,GAA9B,uFACyBY,MAAMC,EAAAA,OAAoBb,IADnD,cACQc,EADR,OAEE3B,QAAQC,IAAI0B,GAFd,kBAKSA,EAASC,QALlB,yJARIJ,mCCWN,QAbe,CACbO,SAAU,uCACVC,eAAgB,qDAChBC,WAAY,6CACZC,iBAAkB,QAElBC,WAAY,gBACZjC,cAAe,sBACfE,iBAAkB,EAClBC,kBAAmB,aACnB+B,kBAAmB,qGCCrBpC,QAAQC,IAAI,oBAEZ,IAAMoC,EAAM,IAAIC,EAAAA,EAAI,CAClBC,OAAQC,SAASC,cAAc,cAC/BC,OAAQF,SAASC,cAAc,WAC/BE,QAASH,SAASC,cAAc,UAGlCG,OAAOC,iBAAiB,cAAc,WACpCR,EAAIS,YACL,IAEDF,OAAOC,iBAAiB,QAAQ,WAC9BR,EAAIS,cACJC,EAAAA,EAAAA,KACAC,EAAAA,EAAAA,KAAwB7C,EAAAA,EAAAA,mBAExB8C,EAAAA,EAAAA,KAA0B,CACxBC,gBAAiBV,SAASC,cAAc,8BACxCU,kBAAmBX,SAASC,cAAc,iCAG7C","sources":["webpack://restaurant-apps/./src/scripts/data/favorite-restaurant.js","webpack://restaurant-apps/./src/scripts/globals/api-endpoints.js","webpack://restaurant-apps/./src/scripts/data/restaurant-source.js","webpack://restaurant-apps/./src/scripts/globals/config.js","webpack://restaurant-apps/./src/scripts/index.js"],"sourcesContent":["import { openDB } from 'idb';\r\nimport CONFIG from '../globals/config';\r\n\r\nconsole.log('favorite restaurant');\r\nconst { DATABASE_NAME, DATABASE_VERSION, OBJECT_STORE_NAME } = CONFIG;\r\n\r\nconst dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\r\n  upgrade(database) {\r\n    database.createObjectStore(OBJECT_STORE_NAME, { keyPath: 'id' });\r\n  },\r\n});\r\n\r\nconst favoriteRestaurant = {\r\n  async getRestaurant(id) {\r\n    if (!id) {\r\n      return;\r\n    }\r\n    return (await dbPromise).get(OBJECT_STORE_NAME, id);\r\n  },\r\n  async getAllRestaurant() {\r\n    return (await dbPromise).getAll(OBJECT_STORE_NAME);\r\n  },\r\n  async putRestaurant(restaurant) {\r\n    if (!restaurant.hasOwnProperty('id')) {\r\n      return;\r\n    }\r\n    return (await dbPromise).put(OBJECT_STORE_NAME, restaurant);\r\n  },\r\n  async deleteRestaurant(id) {\r\n    return (await dbPromise).delete(OBJECT_STORE_NAME, id);\r\n  },\r\n\r\n};\r\nexport default favoriteRestaurant;\r\n","import CONFIG from './config';\r\n\r\nconst API_ENDPOINT = {\r\n  HOME: `${CONFIG.BASE_URL}list`,\r\n  DETAIL: (id) => `${CONFIG.BASE_URL}detail/${id}`,\r\n};\r\n\r\nexport default API_ENDPOINT;\r\n","import API_ENDPOINT from '../globals/api-endpoints';\r\n\r\nclass theRestaurantSource {\r\n  static async listRestaurant() {\r\n    const response = await fetch(API_ENDPOINT.HOME);\r\n    console.log(response);\r\n    const responseJson = await response.json();\r\n    return responseJson.restaurants;\r\n  }\r\n\r\n  static async detailRestaurant(id) {\r\n    const response = await fetch(API_ENDPOINT.DETAIL(id));\r\n    console.log(response);\r\n    // const responseJson = await response.json();\r\n    // return responseJson.restaurants;\r\n    return response.json();\r\n  }\r\n}\r\n\r\nexport default theRestaurantSource;\r\n","const CONFIG = {\r\n  BASE_URL: 'https://restaurant-api.dicoding.dev/',\r\n  BASE_IMAGE_URL: 'https://restaurant-api.dicoding.dev/images/medium/',\r\n  DETAIL_URL: 'https://restaurant-api.dicoding.dev/detail',\r\n  DEFAULT_LANGUAGE: 'en-us',\r\n  // CACHE_NAME: new Date().toISOString(),\r\n  CACHE_NAME: 'restaurant-v1',\r\n  DATABASE_NAME: 'restaurant-database',\r\n  DATABASE_VERSION: 1,\r\n  OBJECT_STORE_NAME: 'restaurant',\r\n  WEB_SOCKET_SERVER: '',\r\n};\r\n\r\nexport default CONFIG;\r\n","import 'regenerator-runtime'; /* for async await transpile */\nimport '../styles/main.css';\nimport '../styles/responsive.css';\nimport App from './views/app';\nimport swRegister from './utils/sw-register';\nimport WebSocketInitiator from './utils/websocket-initiator';\nimport FooterToolsInitiator from './utils/footer-tools-initiator';\nimport CONFIG from './globals/config';\nimport 'lazysizes';\nimport 'lazysizes/plugins/parent-fit/ls.parent-fit';\n\nconsole.log('Hello Coders! :)');\n\nconst app = new App({\n  button: document.querySelector('#hamburger'),\n  drawer: document.querySelector('#drawer'),\n  content: document.querySelector('main'),\n});\n\nwindow.addEventListener('hashchange', () => {\n  app.renderPage();\n});\n\nwindow.addEventListener('load', () => {\n  app.renderPage();\n  swRegister();\n  WebSocketInitiator.init(CONFIG.WEB_SOCKET_SERVER);\n\n  FooterToolsInitiator.init({\n    subscribeButton: document.querySelector('#subscribePushNotification'),\n    unsubscribeButton: document.querySelector('#unsubscribePushNotification'),\n\n  });\n});\n"],"names":["i","console","log","DATABASE_NAME","CONFIG","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","openDB","upgrade","database","createObjectStore","keyPath","getRestaurant","id","get","getAllRestaurant","getAll","putRestaurant","restaurant","hasOwnProperty","put","deleteRestaurant","HOME","DETAIL","theRestaurantSource","fetch","API_ENDPOINT","response","json","responseJson","restaurants","BASE_URL","BASE_IMAGE_URL","DETAIL_URL","DEFAULT_LANGUAGE","CACHE_NAME","WEB_SOCKET_SERVER","app","App","button","document","querySelector","drawer","content","window","addEventListener","renderPage","swRegister","WebSocketInitiator","FooterToolsInitiator","subscribeButton","unsubscribeButton"],"sourceRoot":""}